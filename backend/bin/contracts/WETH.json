{
    "contractName": "WETH",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address payable",
                    "name": "_safetymodule",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approved",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "deposit",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "safetymodule",
            "outputs": [
                {
                    "internalType": "contract SafetyModule",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                }
            ],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_safetymodule\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safetymodule\",\"outputs\":[{\"internalType\":\"contract SafetyModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"constructor 'asked' by the OpenZeppelin contract\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"deposit()\":{\"details\":\"mint 1 WETH for each ETH sent by the sender. WETH are automatically associated to the sender. 20% of this are sent to SafetyModule contract\"},\"mint(address,uint256)\":{\"details\":\"necessary to allow Yield to mint WETH to simulate investement. This function will be delete before deployment in mainnet.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"If the balance of WETH is sufficient, unwrap WETH to ETH and send ETH to the caller. WETH are burned. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/contracts/WETH.sol\":\"WETH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/contracts/SafetyModule.sol\":{\"keccak256\":\"0x433862a0e6212f2201d245d9052c7451647ec4fddfafe9f8a1e0ccbff13dfdfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90a393b56f9c6fe13375680b1f814e8d765e00fb5b17a688a0fdbd356f481014\",\"dweb:/ipfs/QmVVH7bqBo9jAz921A1DWhoAcgmPbnSrP2WBiiWQTYHJYH\"]},\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/contracts/WETH.sol\":{\"keccak256\":\"0x2c540ce67eb8d0a0e5a15b77033c7edd32a3dded50868a4a3ffd8a199c618862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://148c25e2fa56463ce7ec5b2f37a0142c22fedf7ff366d6c2ec6e4b221cfc755e\",\"dweb:/ipfs/QmNsZfySbqaRnUmrcV12cX5obecgamvrmWmWKSZSzoQ1sx\"]},\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
    "bytecode": "608060405234801562000010575f80fd5b5060405162000f0f38038062000f0f83398101604081905262000033916200014b565b336040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b815250604051806040016040528060048152602001630ae8aa8960e31b81525081600390816200008891906200021a565b5060046200009782826200021a565b5050506001600160a01b038116620000c857604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b620000d381620000fa565b50600680546001600160a01b0319166001600160a01b0392909216919091179055620002e2565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f602082840312156200015c575f80fd5b81516001600160a01b038116811462000173575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620001a357607f821691505b602082108103620001c257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000215575f81815260208120601f850160051c81016020861015620001f05750805b601f850160051c820191505b818110156200021157828155600101620001fc565b5050505b505050565b81516001600160401b038111156200023657620002366200017a565b6200024e816200024784546200018e565b84620001c8565b602080601f83116001811462000284575f84156200026c5750858301515b5f19600386901b1c1916600185901b17855562000211565b5f85815260208120601f198616915b82811015620002b45788860151825594840194600190910190840162000293565b5085821015620002d257878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b610c1f80620002f05f395ff3fe6080604052600436106100fa575f3560e01c8063715018a611610092578063a9059cbb11610062578063a9059cbb1461029b578063c1448284146102ba578063d0e30db0146102d9578063dd62ed3e146102e1578063f2fde38b14610325575f80fd5b8063715018a6146102235780638da5cb5b1461023757806392dd9b311461026857806395d89b4114610287575f80fd5b80632e1a7d4d116100cd5780632e1a7d4d14610194578063313ce567146101b557806340c10f19146101d057806370a08231146101ef575f80fd5b806306fdde03146100fe578063095ea7b31461012857806318160ddd1461015757806323b872dd14610175575b5f80fd5b348015610109575f80fd5b50610112610344565b60405161011f9190610a29565b60405180910390f35b348015610133575f80fd5b50610147610142366004610a8f565b6103d4565b604051901515815260200161011f565b348015610162575f80fd5b506002545b60405190815260200161011f565b348015610180575f80fd5b5061014761018f366004610ab7565b6103ed565b34801561019f575f80fd5b506101b36101ae366004610af0565b610410565b005b3480156101c0575f80fd5b506040516012815260200161011f565b3480156101db575f80fd5b506101b36101ea366004610a8f565b6104a2565b3480156101fa575f80fd5b50610167610209366004610b07565b6001600160a01b03165f9081526020819052604090205490565b34801561022e575f80fd5b506101b36104ac565b348015610242575f80fd5b506005546001600160a01b03165b6040516001600160a01b03909116815260200161011f565b348015610273575f80fd5b50600654610250906001600160a01b031681565b348015610292575f80fd5b506101126104bf565b3480156102a6575f80fd5b506101476102b5366004610a8f565b6104ce565b3480156102c5575f80fd5b506101b36102d4366004610a8f565b6104db565b6101b36104ee565b3480156102ec575f80fd5b506101676102fb366004610b27565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610330575f80fd5b506101b361033f366004610b07565b610624565b60606003805461035390610b58565b80601f016020809104026020016040519081016040528092919081815260200182805461037f90610b58565b80156103ca5780601f106103a1576101008083540402835291602001916103ca565b820191905f5260205f20905b8154815290600101906020018083116103ad57829003601f168201915b5050505050905090565b5f336103e1818585610661565b60019150505b92915050565b5f336103fa858285610673565b6104058585856106ee565b506001949350505050565b335f9081526020819052604090205481111561046a5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b610474338261074b565b604051339082156108fc029083905f818181858888f1935050505015801561049e573d5f803e3d5ffd5b5050565b61049e828261077f565b6104b46107b3565b6104bd5f6107e0565b565b60606004805461035390610b58565b5f336103e18185856106ee565b6104e36107b3565b61049e823383610661565b67016345785d8a00003410156105545760405162461bcd60e51b815260206004820152602560248201527f496e73756666696369656e74206465706f7369742c206d696e696d756d20302c604482015264062408aa8960db1b6064820152608401610461565b5f610560600534610ba4565b6006546040519192505f916001600160a01b039091169083908381818185875af1925050503d805f81146105af576040519150601f19603f3d011682016040523d82523d5f602084013e6105b4565b606091505b50509050806106115760405162461bcd60e51b815260206004820152602360248201527f4661696c656420746f2073656e6420323025206f66204574686572206465706f6044820152621cda5d60ea1b6064820152608401610461565b61049e3361061f8434610bc3565b61077f565b61062c6107b3565b6001600160a01b03811661065557604051631e4fbdf760e01b81525f6004820152602401610461565b61065e816107e0565b50565b61066e8383836001610831565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146106e857818110156106da57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610461565b6106e884848484035f610831565b50505050565b6001600160a01b03831661071757604051634b637e8f60e11b81525f6004820152602401610461565b6001600160a01b0382166107405760405163ec442f0560e01b81525f6004820152602401610461565b61066e838383610903565b6001600160a01b03821661077457604051634b637e8f60e11b81525f6004820152602401610461565b61049e825f83610903565b6001600160a01b0382166107a85760405163ec442f0560e01b81525f6004820152602401610461565b61049e5f8383610903565b6005546001600160a01b031633146104bd5760405163118cdaa760e01b8152336004820152602401610461565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03841661085a5760405163e602df0560e01b81525f6004820152602401610461565b6001600160a01b03831661088357604051634a1406b160e11b81525f6004820152602401610461565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106e857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108f591815260200190565b60405180910390a350505050565b6001600160a01b03831661092d578060025f8282546109229190610bd6565b9091555061099d9050565b6001600160a01b0383165f908152602081905260409020548181101561097f5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610461565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166109b9576002805482900390556109d7565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a1c91815260200190565b60405180910390a3505050565b5f6020808352835180828501525f5b81811015610a5457858101830151858201604001528201610a38565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a8a575f80fd5b919050565b5f8060408385031215610aa0575f80fd5b610aa983610a74565b946020939093013593505050565b5f805f60608486031215610ac9575f80fd5b610ad284610a74565b9250610ae060208501610a74565b9150604084013590509250925092565b5f60208284031215610b00575f80fd5b5035919050565b5f60208284031215610b17575f80fd5b610b2082610a74565b9392505050565b5f8060408385031215610b38575f80fd5b610b4183610a74565b9150610b4f60208401610a74565b90509250929050565b600181811c90821680610b6c57607f821691505b602082108103610b8a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b5f82610bbe57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156103e7576103e7610b90565b808201808211156103e7576103e7610b9056fea2646970667358221220e3358f6f53a3211530ee6b5ea52b963709d567069849ad1f7570b4a8f9875ab364736f6c63430008140033",
    "deployedBytecode": "6080604052600436106100fa575f3560e01c8063715018a611610092578063a9059cbb11610062578063a9059cbb1461029b578063c1448284146102ba578063d0e30db0146102d9578063dd62ed3e146102e1578063f2fde38b14610325575f80fd5b8063715018a6146102235780638da5cb5b1461023757806392dd9b311461026857806395d89b4114610287575f80fd5b80632e1a7d4d116100cd5780632e1a7d4d14610194578063313ce567146101b557806340c10f19146101d057806370a08231146101ef575f80fd5b806306fdde03146100fe578063095ea7b31461012857806318160ddd1461015757806323b872dd14610175575b5f80fd5b348015610109575f80fd5b50610112610344565b60405161011f9190610a29565b60405180910390f35b348015610133575f80fd5b50610147610142366004610a8f565b6103d4565b604051901515815260200161011f565b348015610162575f80fd5b506002545b60405190815260200161011f565b348015610180575f80fd5b5061014761018f366004610ab7565b6103ed565b34801561019f575f80fd5b506101b36101ae366004610af0565b610410565b005b3480156101c0575f80fd5b506040516012815260200161011f565b3480156101db575f80fd5b506101b36101ea366004610a8f565b6104a2565b3480156101fa575f80fd5b50610167610209366004610b07565b6001600160a01b03165f9081526020819052604090205490565b34801561022e575f80fd5b506101b36104ac565b348015610242575f80fd5b506005546001600160a01b03165b6040516001600160a01b03909116815260200161011f565b348015610273575f80fd5b50600654610250906001600160a01b031681565b348015610292575f80fd5b506101126104bf565b3480156102a6575f80fd5b506101476102b5366004610a8f565b6104ce565b3480156102c5575f80fd5b506101b36102d4366004610a8f565b6104db565b6101b36104ee565b3480156102ec575f80fd5b506101676102fb366004610b27565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610330575f80fd5b506101b361033f366004610b07565b610624565b60606003805461035390610b58565b80601f016020809104026020016040519081016040528092919081815260200182805461037f90610b58565b80156103ca5780601f106103a1576101008083540402835291602001916103ca565b820191905f5260205f20905b8154815290600101906020018083116103ad57829003601f168201915b5050505050905090565b5f336103e1818585610661565b60019150505b92915050565b5f336103fa858285610673565b6104058585856106ee565b506001949350505050565b335f9081526020819052604090205481111561046a5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b610474338261074b565b604051339082156108fc029083905f818181858888f1935050505015801561049e573d5f803e3d5ffd5b5050565b61049e828261077f565b6104b46107b3565b6104bd5f6107e0565b565b60606004805461035390610b58565b5f336103e18185856106ee565b6104e36107b3565b61049e823383610661565b67016345785d8a00003410156105545760405162461bcd60e51b815260206004820152602560248201527f496e73756666696369656e74206465706f7369742c206d696e696d756d20302c604482015264062408aa8960db1b6064820152608401610461565b5f610560600534610ba4565b6006546040519192505f916001600160a01b039091169083908381818185875af1925050503d805f81146105af576040519150601f19603f3d011682016040523d82523d5f602084013e6105b4565b606091505b50509050806106115760405162461bcd60e51b815260206004820152602360248201527f4661696c656420746f2073656e6420323025206f66204574686572206465706f6044820152621cda5d60ea1b6064820152608401610461565b61049e3361061f8434610bc3565b61077f565b61062c6107b3565b6001600160a01b03811661065557604051631e4fbdf760e01b81525f6004820152602401610461565b61065e816107e0565b50565b61066e8383836001610831565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146106e857818110156106da57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610461565b6106e884848484035f610831565b50505050565b6001600160a01b03831661071757604051634b637e8f60e11b81525f6004820152602401610461565b6001600160a01b0382166107405760405163ec442f0560e01b81525f6004820152602401610461565b61066e838383610903565b6001600160a01b03821661077457604051634b637e8f60e11b81525f6004820152602401610461565b61049e825f83610903565b6001600160a01b0382166107a85760405163ec442f0560e01b81525f6004820152602401610461565b61049e5f8383610903565b6005546001600160a01b031633146104bd5760405163118cdaa760e01b8152336004820152602401610461565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03841661085a5760405163e602df0560e01b81525f6004820152602401610461565b6001600160a01b03831661088357604051634a1406b160e11b81525f6004820152602401610461565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156106e857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108f591815260200190565b60405180910390a350505050565b6001600160a01b03831661092d578060025f8282546109229190610bd6565b9091555061099d9050565b6001600160a01b0383165f908152602081905260409020548181101561097f5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610461565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166109b9576002805482900390556109d7565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a1c91815260200190565b60405180910390a3505050565b5f6020808352835180828501525f5b81811015610a5457858101830151858201604001528201610a38565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a8a575f80fd5b919050565b5f8060408385031215610aa0575f80fd5b610aa983610a74565b946020939093013593505050565b5f805f60608486031215610ac9575f80fd5b610ad284610a74565b9250610ae060208501610a74565b9150604084013590509250925092565b5f60208284031215610b00575f80fd5b5035919050565b5f60208284031215610b17575f80fd5b610b2082610a74565b9392505050565b5f8060408385031215610b38575f80fd5b610b4183610a74565b9150610b4f60208401610a74565b90509250929050565b600181811c90821680610b6c57607f821691505b602082108103610b8a57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b5f82610bbe57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156103e7576103e7610b90565b808201808211156103e7576103e7610b9056fea2646970667358221220e3358f6f53a3211530ee6b5ea52b963709d567069849ad1f7570b4a8f9875ab364736f6c63430008140033",
    "sourceMap": "453:1488:1:-:0;;;592:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;675:10;1896:113:4;;;;;;;;;;;;;-1:-1:-1;;;1896:113:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:4;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:4;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:2;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:2;;1350:1;1322:31;;;3184:51:8;3157:18;;1322:31:2;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;697:12:1::2;:42:::0;;-1:-1:-1;;;;;;697:42:1::2;-1:-1:-1::0;;;;;697:42:1;;;::::2;::::0;;;::::2;::::0;;453:1488;;2912:187:2;3004:6;;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:298:8:-;92:6;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;187:16;;-1:-1:-1;;;;;232:31:8;;222:42;;212:70;;278:1;275;268:12;212:70;301:5;14:298;-1:-1:-1;;;14:298:8:o;317:127::-;378:10;373:3;369:20;366:1;359:31;409:4;406:1;399:15;433:4;430:1;423:15;449:380;528:1;524:12;;;;571;;;592:61;;646:4;638:6;634:17;624:27;;592:61;699:2;691:6;688:14;668:18;665:38;662:161;;745:10;740:3;736:20;733:1;726:31;780:4;777:1;770:15;808:4;805:1;798:15;662:161;;449:380;;;:::o;960:545::-;1062:2;1057:3;1054:11;1051:448;;;1098:1;1123:5;1119:2;1112:17;1168:4;1164:2;1154:19;1238:2;1226:10;1222:19;1219:1;1215:27;1209:4;1205:38;1274:4;1262:10;1259:20;1256:47;;;-1:-1:-1;1297:4:8;1256:47;1352:2;1347:3;1343:12;1340:1;1336:20;1330:4;1326:31;1316:41;;1407:82;1425:2;1418:5;1415:13;1407:82;;;1470:17;;;1451:1;1440:13;1407:82;;;1411:3;;;1051:448;960:545;;;:::o;1681:1352::-;1801:10;;-1:-1:-1;;;;;1823:30:8;;1820:56;;;1856:18;;:::i;:::-;1885:97;1975:6;1935:38;1967:4;1961:11;1935:38;:::i;:::-;1929:4;1885:97;:::i;:::-;2037:4;;2101:2;2090:14;;2118:1;2113:663;;;;2820:1;2837:6;2834:89;;;-1:-1:-1;2889:19:8;;;2883:26;2834:89;-1:-1:-1;;1638:1:8;1634:11;;;1630:24;1626:29;1616:40;1662:1;1658:11;;;1613:57;2936:81;;2083:944;;2113:663;907:1;900:14;;;944:4;931:18;;-1:-1:-1;;2149:20:8;;;2267:236;2281:7;2278:1;2275:14;2267:236;;;2370:19;;;2364:26;2349:42;;2462:27;;;;2430:1;2418:14;;;;2297:19;;2267:236;;;2271:3;2531:6;2522:7;2519:19;2516:201;;;2592:19;;;2586:26;-1:-1:-1;;2675:1:8;2671:14;;;2687:3;2667:24;2663:37;2659:42;2644:58;2629:74;;2516:201;-1:-1:-1;;;;;2763:1:8;2747:14;;;2743:22;2730:36;;-1:-1:-1;1681:1352:8:o;3038:203::-;453:1488:1;;;;;;",
    "deployedSourceMap": "453:1488:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;-1:-1:-1;4293:186:4;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;4293:186:4;1004:187:8;3144:97:4;;;;;;;;;;-1:-1:-1;3222:12:4;;3144:97;;;1342:25:8;;;1330:2;1315:18;3144:97:4;1196:177:8;5039:244:4;;;;;;;;;;-1:-1:-1;5039:244:4;;;;;:::i;:::-;;:::i;1384:206:1:-;;;;;;;;;;-1:-1:-1;1384:206:1;;;;;:::i;:::-;;:::i;:::-;;3002:82:4;;;;;;;;;;-1:-1:-1;3002:82:4;;3075:2;2038:36:8;;2026:2;2011:18;3002:82:4;1896:184:8;1730:85:1;;;;;;;;;;-1:-1:-1;1730:85:1;;;;;:::i;:::-;;:::i;3299:116:4:-;;;;;;;;;;-1:-1:-1;3299:116:4;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:4;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:2;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1710:6:2;;-1:-1:-1;;;;;1710:6:2;1638:85;;;-1:-1:-1;;;;;2440:32:8;;;2422:51;;2410:2;2395:18;1638:85:2;2276:203:8;492:32:1;;;;;;;;;;-1:-1:-1;492:32:1;;;;-1:-1:-1;;;;;492:32:1;;;2276:93:4;;;;;;;;;;;;;:::i;3610:178::-;;;;;;;;;;-1:-1:-1;3610:178:4;;;;;:::i;:::-;;:::i;1821:117:1:-;;;;;;;;;;-1:-1:-1;1821:117:1;;;;;:::i;:::-;;:::i;906:356::-;;;:::i;3846:140:4:-;;;;;;;;;;-1:-1:-1;3846:140:4;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:4;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:2;;;;;;;;;;-1:-1:-1;2543:215:2;;;;;:::i;:::-;;:::i;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:7;4420:31:4;735:10:7;4436:7:4;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:7;5182:37:4;5198:4;735:10:7;5213:5:4;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:4;;5039:244;-1:-1:-1;;;;5039:244:4:o;1384:206:1:-;1453:10;3364:7:4;3390:18;;;;;;;;;;;1468:7:1;-1:-1:-1;1443:32:1;1435:65;;;;-1:-1:-1;;;1435:65:1;;3572:2:8;1435:65:1;;;3554:21:8;3611:2;3591:18;;;3584:30;-1:-1:-1;;;3630:18:8;;;3623:50;3690:18;;1435:65:1;;;;;;;;;1510:26;1516:10;1528:7;1510:5;:26::i;:::-;1546:37;;1554:10;;1546:37;;;;;1575:7;;1546:37;;;;1575:7;1554:10;1546:37;;;;;;;;;;;;;;;;;;;;;1384:206;:::o;1730:85::-;1791:17;1797:2;1801:6;1791:5;:17::i;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:7;3733:27:4;735:10:7;3750:2:4;3754:5;3733:9;:27::i;1821:117:1:-;1531:13:2;:11;:13::i;:::-;1897:34:1::1;1906:5;1913:10;1925:5;1897:8;:34::i;906:356::-:0;974:4;960:9;:19;;952:69;;;;-1:-1:-1;;;952:69:1;;3921:2:8;952:69:1;;;3903:21:8;3960:2;3940:18;;;3933:30;3999:34;3979:18;;;3972:62;-1:-1:-1;;;4050:18:8;;;4043:35;4095:19;;952:69:1;3719:401:8;952:69:1;1031:14;1049:13;1061:1;1049:9;:13;:::i;:::-;1100:12;;1092:48;;1031:32;;-1:-1:-1;1075:12:1;;-1:-1:-1;;;;;1100:12:1;;;;1031:32;;1075:12;1092:48;1075:12;1092:48;1031:32;1100:12;1092:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:66;;;1158:7;1150:55;;;;-1:-1:-1;;;1150:55:1;;4891:2:8;1150:55:1;;;4873:21:8;4930:2;4910:18;;;4903:30;4969:34;4949:18;;;4942:62;-1:-1:-1;;;5020:18:8;;;5013:33;5063:19;;1150:55:1;4689:399:8;1150:55:1;1215:40;1221:10;1233:21;1245:9;1233;:21;:::i;:::-;1215:5;:40::i;2543:215:2:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:2;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:2;;2700:1:::1;2672:31;::::0;::::1;2422:51:8::0;2395:18;;2672:31:2::1;2276:203:8::0;2623:91:2::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:4;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:4;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:4;;-1:-1:-1;;;;;5446:32:8;;10936:60:4;;;5428:51:8;5495:18;;;5488:34;;;5538:18;;;5531:34;;;5401:18;;10936:60:4;5226:345:8;10881:130:4;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:4;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:4;;5807:1;5780:30;;;2422:51:8;2395:18;;5780:30:4;2276:203:8;5735:86:4;-1:-1:-1;;;;;5834:16:4;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:4;;5902:1;5873:32;;;2422:51:8;2395:18;;5873:32:4;2276:203:8;5830:86:4;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;8247:206::-;-1:-1:-1;;;;;8317:21:4;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:4;;8388:1;8361:30;;;2422:51:8;2395:18;;8361:30:4;2276:203:8;8313:89:4;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;7721:208::-;-1:-1:-1;;;;;7791:21:4;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:4;;7864:1;7835:32;;;2422:51:8;2395:18;;7835:32:4;2276:203:8;7787:91:4;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;1796:162:2:-;1710:6;;-1:-1:-1;;;;;1710:6:2;735:10:7;1855:23:2;1851:101;;1901:40;;-1:-1:-1;;;1901:40:2;;735:10:7;1901:40:2;;;2422:51:8;2395:18;;1901:40:2;2276:203:8;2912:187:2;3004:6;;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:4:-;-1:-1:-1;;;;;10061:19:4;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:4;;10132:1;10103:32;;;2422:51:8;2395:18;;10103:32:4;2276:203:8;10057:89:4;-1:-1:-1;;;;;10159:21:4;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:4;;10231:1;10203:31;;;2422:51:8;2395:18;;10203:31:4;2276:203:8;10155:90:4;-1:-1:-1;;;;;10254:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:4;10342:5;-1:-1:-1;;;;;10333:31:4;;10358:5;10333:31;;;;1342:25:8;;1330:2;1315:18;;1196:177;10333:31:4;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:4;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:4;;-1:-1:-1;6356:540:4;;-1:-1:-1;;;;;6570:15:4;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:4;;-1:-1:-1;;;;;5446:32:8;;6649:50:4;;;5428:51:8;5495:18;;;5488:34;;;5538:18;;;5531:34;;;5401:18;;6649:50:4;5226:345:8;6599:115:4;-1:-1:-1;;;;;6834:15:4;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:4;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:4;7355:4;-1:-1:-1;;;;;7346:25:4;;7365:5;7346:25;;;;1342::8;;1330:2;1315:18;;1196:177;7346:25:4;;;;;;;;6271:1107;;;:::o;14:548:8:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1711:180::-;1770:6;1823:2;1811:9;1802:7;1798:23;1794:32;1791:52;;;1839:1;1836;1829:12;1791:52;-1:-1:-1;1862:23:8;;1711:180;-1:-1:-1;1711:180:8:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:8:o;2720:260::-;2788:6;2796;2849:2;2837:9;2828:7;2824:23;2820:32;2817:52;;;2865:1;2862;2855:12;2817:52;2888:29;2907:9;2888:29;:::i;:::-;2878:39;;2936:38;2970:2;2959:9;2955:18;2936:38;:::i;:::-;2926:48;;2720:260;;;;;:::o;2985:380::-;3064:1;3060:12;;;;3107;;;3128:61;;3182:4;3174:6;3170:17;3160:27;;3128:61;3235:2;3227:6;3224:14;3204:18;3201:38;3198:161;;3281:10;3276:3;3272:20;3269:1;3262:31;3316:4;3313:1;3306:15;3344:4;3341:1;3334:15;3198:161;;2985:380;;;:::o;4125:127::-;4186:10;4181:3;4177:20;4174:1;4167:31;4217:4;4214:1;4207:15;4241:4;4238:1;4231:15;4257:217;4297:1;4323;4313:132;;4367:10;4362:3;4358:20;4355:1;4348:31;4402:4;4399:1;4392:15;4430:4;4427:1;4420:15;4313:132;-1:-1:-1;4459:9:8;;4257:217::o;5093:128::-;5160:9;;;5181:11;;;5178:37;;;5195:18;;:::i;5576:125::-;5641:9;;;5662:10;;;5659:36;;;5675:18;;:::i",
    "sourcePath": "/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/contracts/WETH.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.20+commit.a1b79de6"
    },
    "ast": {
        "absolutePath": "/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/contracts/WETH.sol",
        "exportedSymbols": {
            "Context": [
                1232
            ],
            "ERC20": [
                1098
            ],
            "IERC20": [
                1176
            ],
            "IERC20Errors": [
                488
            ],
            "IERC20Metadata": [
                1202
            ],
            "Ownable": [
                446
            ],
            "SafetyModule": [
                153
            ],
            "WETH": [
                298
            ]
        },
        "id": 299,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 155,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                ],
                "nodeType": "PragmaDirective",
                "src": "149:24:1"
            },
            {
                "absolutePath": "/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 156,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 299,
                "sourceUnit": 1099,
                "src": "176:124:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 157,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 299,
                "sourceUnit": 447,
                "src": "301:121:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/nabuza/Alyra/Projet-Final_Legacy-Protocol/backend/contracts/SafetyModule.sol",
                "file": "./SafetyModule.sol",
                "id": 158,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 299,
                "sourceUnit": 154,
                "src": "423:28:1",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 159,
                            "name": "ERC20",
                            "nameLocations": [
                                "470:5:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1098,
                            "src": "470:5:1"
                        },
                        "id": 160,
                        "nodeType": "InheritanceSpecifier",
                        "src": "470:5:1"
                    },
                    {
                        "baseName": {
                            "id": 161,
                            "name": "Ownable",
                            "nameLocations": [
                                "477:7:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 446,
                            "src": "477:7:1"
                        },
                        "id": 162,
                        "nodeType": "InheritanceSpecifier",
                        "src": "477:7:1"
                    }
                ],
                "canonicalName": "WETH",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 298,
                "linearizedBaseContracts": [
                    298,
                    446,
                    1098,
                    488,
                    1202,
                    1176,
                    1232
                ],
                "name": "WETH",
                "nameLocation": "462:4:1",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "92dd9b31",
                        "id": 165,
                        "mutability": "mutable",
                        "name": "safetymodule",
                        "nameLocation": "512:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "492:32:1",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SafetyModule_$153",
                            "typeString": "contract SafetyModule"
                        },
                        "typeName": {
                            "id": 164,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 163,
                                "name": "SafetyModule",
                                "nameLocations": [
                                    "492:12:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 153,
                                "src": "492:12:1"
                            },
                            "referencedDeclaration": 153,
                            "src": "492:12:1",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SafetyModule_$153",
                                "typeString": "contract SafetyModule"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 185,
                            "nodeType": "Block",
                            "src": "687:60:1",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 183,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 179,
                                            "name": "safetymodule",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 165,
                                            "src": "697:12:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SafetyModule_$153",
                                                "typeString": "contract SafetyModule"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 181,
                                                    "name": "_safetymodule",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 168,
                                                    "src": "725:13:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                ],
                                                "id": 180,
                                                "name": "SafetyModule",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 153,
                                                "src": "712:12:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_SafetyModule_$153_$",
                                                    "typeString": "type(contract SafetyModule)"
                                                }
                                            },
                                            "id": 182,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "712:27:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SafetyModule_$153",
                                                "typeString": "contract SafetyModule"
                                            }
                                        },
                                        "src": "697:42:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_SafetyModule_$153",
                                            "typeString": "contract SafetyModule"
                                        }
                                    },
                                    "id": 184,
                                    "nodeType": "ExpressionStatement",
                                    "src": "697:42:1"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 166,
                            "nodeType": "StructuredDocumentation",
                            "src": "531:56:1",
                            "text": "@dev constructor 'asked' by the OpenZeppelin contract"
                        },
                        "id": 186,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "57726170706564204574686572",
                                        "id": 171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "642:15:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3",
                                            "typeString": "literal_string \"Wrapped Ether\""
                                        },
                                        "value": "Wrapped Ether"
                                    },
                                    {
                                        "hexValue": "57455448",
                                        "id": 172,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "659:6:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
                                            "typeString": "literal_string \"WETH\""
                                        },
                                        "value": "WETH"
                                    }
                                ],
                                "id": 173,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 170,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "636:5:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1098,
                                    "src": "636:5:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "636:30:1"
                            },
                            {
                                "arguments": [
                                    {
                                        "expression": {
                                            "id": 175,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "675:3:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 176,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "679:6:1",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "675:10:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 177,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 174,
                                    "name": "Ownable",
                                    "nameLocations": [
                                        "667:7:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 446,
                                    "src": "667:7:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "667:19:1"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 169,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 168,
                                    "mutability": "mutable",
                                    "name": "_safetymodule",
                                    "nameLocation": "621:13:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 186,
                                    "src": "604:30:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                    },
                                    "typeName": {
                                        "id": 167,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "604:15:1",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "603:32:1"
                        },
                        "returnParameters": {
                            "id": 178,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "687:0:1"
                        },
                        "scope": 298,
                        "src": "592:155:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 233,
                            "nodeType": "Block",
                            "src": "942:320:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 195,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 191,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "960:3:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 192,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "964:5:1",
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "960:9:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "components": [
                                                        {
                                                            "hexValue": "31653137",
                                                            "id": 193,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "974:4:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                                                "typeString": "int_const 100000000000000000"
                                                            },
                                                            "value": "1e17"
                                                        }
                                                    ],
                                                    "id": 194,
                                                    "isConstant": false,
                                                    "isInlineArray": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "TupleExpression",
                                                    "src": "973:6:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                                                        "typeString": "int_const 100000000000000000"
                                                    }
                                                },
                                                "src": "960:19:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e73756666696369656e74206465706f7369742c206d696e696d756d20302c3120455448",
                                                "id": 196,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "981:39:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_76545bbe6e275c9bb8504ca509e80669942af3546edf1250db13869f1bc11d03",
                                                    "typeString": "literal_string \"Insufficient deposit, minimum 0,1 ETH\""
                                                },
                                                "value": "Insufficient deposit, minimum 0,1 ETH"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_76545bbe6e275c9bb8504ca509e80669942af3546edf1250db13869f1bc11d03",
                                                    "typeString": "literal_string \"Insufficient deposit, minimum 0,1 ETH\""
                                                }
                                            ],
                                            "id": 190,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "952:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 197,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "952:69:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 198,
                                    "nodeType": "ExpressionStatement",
                                    "src": "952:69:1"
                                },
                                {
                                    "assignments": [
                                        200
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 200,
                                            "mutability": "mutable",
                                            "name": "_amount20",
                                            "nameLocation": "1036:9:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 233,
                                            "src": "1031:14:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 199,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1031:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 206,
                                    "initialValue": {
                                        "components": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 204,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 201,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1049:3:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 202,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1053:5:1",
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1049:9:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "/",
                                                "rightExpression": {
                                                    "hexValue": "35",
                                                    "id": 203,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1061:1:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_5_by_1",
                                                        "typeString": "int_const 5"
                                                    },
                                                    "value": "5"
                                                },
                                                "src": "1049:13:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "id": 205,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "1048:15:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1031:32:1"
                                },
                                {
                                    "assignments": [
                                        208,
                                        null
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 208,
                                            "mutability": "mutable",
                                            "name": "success",
                                            "nameLocation": "1080:7:1",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 233,
                                            "src": "1075:12:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 207,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1075:4:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        null
                                    ],
                                    "id": 218,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "hexValue": "",
                                                "id": 216,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1137:2:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                },
                                                "value": ""
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                    "typeString": "literal_string \"\""
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                        "typeString": "literal_string \"\""
                                                    }
                                                ],
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 211,
                                                            "name": "safetymodule",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 165,
                                                            "src": "1100:12:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_SafetyModule_$153",
                                                                "typeString": "contract SafetyModule"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_SafetyModule_$153",
                                                                "typeString": "contract SafetyModule"
                                                            }
                                                        ],
                                                        "id": 210,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1092:7:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 209,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1092:7:1",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 212,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1092:21:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 213,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1114:4:1",
                                                "memberName": "call",
                                                "nodeType": "MemberAccess",
                                                "src": "1092:26:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                }
                                            },
                                            "id": 215,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "names": [
                                                "value"
                                            ],
                                            "nodeType": "FunctionCallOptions",
                                            "options": [
                                                {
                                                    "id": 214,
                                                    "name": "_amount20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 200,
                                                    "src": "1126:9:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "src": "1092:44:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                            }
                                        },
                                        "id": 217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1092:48:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "tuple(bool,bytes memory)"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1074:66:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 220,
                                                "name": "success",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 208,
                                                "src": "1158:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4661696c656420746f2073656e6420323025206f66204574686572206465706f736974",
                                                "id": 221,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1167:37:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_37b66210605a9b75932125823dfdd8ef8d4efdd8a4c6e067eba0b47a134e0332",
                                                    "typeString": "literal_string \"Failed to send 20% of Ether deposit\""
                                                },
                                                "value": "Failed to send 20% of Ether deposit"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_37b66210605a9b75932125823dfdd8ef8d4efdd8a4c6e067eba0b47a134e0332",
                                                    "typeString": "literal_string \"Failed to send 20% of Ether deposit\""
                                                }
                                            ],
                                            "id": 219,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1150:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 222,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1150:55:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 223,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1150:55:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 225,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1221:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 226,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1225:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1221:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 230,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 227,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "1233:3:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 228,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "1237:5:1",
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "1233:9:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                    "id": 229,
                                                    "name": "_amount20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 200,
                                                    "src": "1245:9:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1233:21:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 224,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 938,
                                            "src": "1215:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 231,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1215:40:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 232,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1215:40:1"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 187,
                            "nodeType": "StructuredDocumentation",
                            "src": "753:148:1",
                            "text": "@dev mint 1 WETH for each ETH sent by the sender. WETH are automatically associated to the sender. 20% of this are sent to SafetyModule contract"
                        },
                        "functionSelector": "d0e30db0",
                        "id": 234,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "deposit",
                        "nameLocation": "915:7:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 188,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "922:2:1"
                        },
                        "returnParameters": {
                            "id": 189,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "942:0:1"
                        },
                        "scope": 298,
                        "src": "906:356:1",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 265,
                            "nodeType": "Block",
                            "src": "1425:165:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 246,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 242,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "1453:3:1",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 243,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "1457:6:1",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1453:10:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 241,
                                                        "name": "balanceOf",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 684,
                                                        "src": "1443:9:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view returns (uint256)"
                                                        }
                                                    },
                                                    "id": 244,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1443:21:1",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "id": 245,
                                                    "name": "_amount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 237,
                                                    "src": "1468:7:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1443:32:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "496e73756666696369656e742062616c616e6365",
                                                "id": 247,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1477:22:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                                    "typeString": "literal_string \"Insufficient balance\""
                                                },
                                                "value": "Insufficient balance"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                                                    "typeString": "literal_string \"Insufficient balance\""
                                                }
                                            ],
                                            "id": 240,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1435:7:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 248,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1435:65:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 249,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1435:65:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 251,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1516:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 252,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1520:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1516:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 253,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 237,
                                                "src": "1528:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 250,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 971,
                                            "src": "1510:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 254,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1510:26:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 255,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1510:26:1"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 262,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 237,
                                                "src": "1575:7:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 258,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "1554:3:1",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 259,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1558:6:1",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "1554:10:1",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 257,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1546:8:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 256,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1546:8:1",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 260,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1546:19:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 261,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1566:8:1",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "1546:28:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 263,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1546:37:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 264,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1546:37:1"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 235,
                            "nodeType": "StructuredDocumentation",
                            "src": "1268:111:1",
                            "text": "@dev If the balance of WETH is sufficient, unwrap WETH to ETH and send ETH to the caller. WETH are burned. "
                        },
                        "functionSelector": "2e1a7d4d",
                        "id": 266,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "withdraw",
                        "nameLocation": "1393:8:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 238,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 237,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "1407:7:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 266,
                                    "src": "1402:12:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 236,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1402:4:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1401:14:1"
                        },
                        "returnParameters": {
                            "id": 239,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1425:0:1"
                        },
                        "scope": 298,
                        "src": "1384:206:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 279,
                            "nodeType": "Block",
                            "src": "1781:34:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 275,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 269,
                                                "src": "1797:2:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 276,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 271,
                                                "src": "1801:6:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 274,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 938,
                                            "src": "1791:5:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 277,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1791:17:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 278,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1791:17:1"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 267,
                            "nodeType": "StructuredDocumentation",
                            "src": "1596:129:1",
                            "text": "@dev necessary to allow Yield to mint WETH to simulate investement. This function will be delete before deployment in mainnet."
                        },
                        "functionSelector": "40c10f19",
                        "id": 280,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "1739:4:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 272,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 269,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1752:2:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 280,
                                    "src": "1744:10:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 268,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1744:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 271,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "1764:6:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 280,
                                    "src": "1756:14:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 270,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1756:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1743:28:1"
                        },
                        "returnParameters": {
                            "id": 273,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1781:0:1"
                        },
                        "scope": 298,
                        "src": "1730:85:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 296,
                            "nodeType": "Block",
                            "src": "1886:52:1",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 290,
                                                "name": "owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 282,
                                                "src": "1906:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 291,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1913:3:1",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 292,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1917:6:1",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1913:10:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 293,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 284,
                                                "src": "1925:5:1",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 289,
                                            "name": "_approve",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                989,
                                                1049
                                            ],
                                            "referencedDeclaration": 989,
                                            "src": "1897:8:1",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 294,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1897:34:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 295,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1897:34:1"
                                }
                            ]
                        },
                        "functionSelector": "c1448284",
                        "id": 297,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 287,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 286,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1876:9:1"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 357,
                                    "src": "1876:9:1"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1876:9:1"
                            }
                        ],
                        "name": "approved",
                        "nameLocation": "1830:8:1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 285,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 282,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nameLocation": "1847:5:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 297,
                                    "src": "1839:13:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 281,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1839:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 284,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1862:5:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 297,
                                    "src": "1854:13:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 283,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1854:7:1",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1838:30:1"
                        },
                        "returnParameters": {
                            "id": 288,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1886:0:1"
                        },
                        "scope": 298,
                        "src": "1821:117:1",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 299,
                "src": "453:1488:1",
                "usedErrors": [
                    312,
                    317,
                    458,
                    463,
                    468,
                    477,
                    482,
                    487
                ],
                "usedEvents": [
                    323,
                    1110,
                    1119
                ]
            }
        ],
        "src": "149:1792:1"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "approved(address,uint256)": "c1448284",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "deposit()": "d0e30db0",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "safetymodule()": "92dd9b31",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "withdraw(uint256)": "2e1a7d4d"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "620600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24758",
            "approved(address,uint256)": "26841",
            "balanceOf(address)": "2626",
            "decimals()": "221",
            "deposit()": "infinite",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "2364",
            "renounceOwnership()": "infinite",
            "safetymodule()": "2403",
            "symbol()": "infinite",
            "totalSupply()": "2348",
            "transfer(address,uint256)": "51238",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28443",
            "withdraw(uint256)": "infinite"
        }
    }
}